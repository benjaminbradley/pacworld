---------------------------------------------------- FUTURE TASKS:


NEXT STEPS for MVP:
- add collision detection for size/side changes
- autonomous chars should randomly switch between swirls
- add effects when activating a swirl
- get a swirl from another character "ask"
- idle behavior for current character (plays itself)
- switch between characters (for idle)
- when the world reaches a certain level of swirl "saturation" (e.g. % of characters have # of swirls) then remake the world
- other TODOs in code
- try and spread art around more - maybe pref against pathways?
- make more interesting different looking art pieces
- ? AI ability to detect wall collisions and shrink size when needed?  (test with initial size @ 120) otherwise they'll just stay stuck until they randomly activate the right sequence of swirls to get un-stuck

FIXME:
door placement algorithm (world.py#negotiateDoorPlacement) will coordinate door location with existing door, but if 2 rooms are side-by-side next to the SAME side of one adjacent room, the second one will move the door during ITS 'coordinate door placement' (see topleft corner of -s 2357 -c 3)

META FEATURES:
- segment logging by e.g. world generation, autonomous behavior, draw/rendering, etc. to easily toggle on/off and/or separate channels
- add memory profiling to watch for memory leaks

PERFORMANCE:
- turn drawn swirls into sprites to speed animation
- change all shape.makeSprite calls to set a dirty flag, collapse into a single makeSprite call :: watch out to preserve in shape.update(): self.changeAngle() followed by self.move() in the same update, and collision test will matter /// maybe a flag that signals mask-only generation or full graphical mode

ENHANCEMENTS:
- allow multiple doors per room side
- special ability to activate all of your swirls one after another
